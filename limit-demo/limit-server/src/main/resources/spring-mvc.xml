<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- 配置SpringMVC -->

    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供：数据绑定，数字和日期的format（@NumberFormat, @DateTimeFormat）, xml,json默认读写支持 -->
    <mvc:annotation-driven/>


    <!-- 2.静态资源默认servlet配置（以下二选一）
        (1)加入对静态资源的处理：js,gif,png
        (2)允许使用"/"做整体映射 -->
    <!--允许静态资源放在任何地方，如WEB-INF目录下、类路径下等-->
    <!--<mvc:resources location="/resources/" mapping="/resources/**"/>

    在SpringMVC3.0之后推荐使用一：
    <mvc:annotation-driven />
    <mvc:resources location="/img/" mapping="/img/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/css/" mapping="/css/**"/>
    说明：
    location元素表示webapp目录下的static包下的所有文件；
    mapping元素表示以/static开头的所有请求路径，如/static/a 或者/static/a/b；

    &lt;!&ndash;配置<mvc:default-servlet-handler/>后，
        会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
        它会像一个检查员，对进入DispatcherServlet的URL进行筛查，
        如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
        如果不是静态资源的请求，才由DispatcherServlet继续处理。&ndash;&gt;
    <mvc:default-servlet-handler/>-->


    <!-- 3.定义视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/html/"></property>
        <property name="suffix" value=".html"></property>
    </bean>


    <!-- 在spring-mvc.xml文件中加入这段配置后，spring返回给页面的都是utf-8编码了 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>


    <!-- 4.扫描controller相关的bean -->
    <!-- ** 匹配任意class文件和包，而 * 只能匹配包，因此无法扫描到包下的类 -->
    <!-- console.** （等同于controller）和 console.*contrller（ 以dao结尾的包通配） -->
    <context:component-scan base-package="cn.limit.vincent"/>


    <!-- 5.权限拦截器 -->
    <!--<mvc:interceptors>

        <mvc:interceptor>
            <mvc:mapping path="/login/**"/>
            <mvc:exclude-mapping path="/login/top"/>
            <bean id="loginInterceptor"
                  class="com.LoginInterceptor"/>
        </mvc:interceptor>

    </mvc:interceptors>-->

</beans>