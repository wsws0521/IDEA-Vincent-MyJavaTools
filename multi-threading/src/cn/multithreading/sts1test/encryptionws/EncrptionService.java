
package cn.multithreading.sts1test.encryptionws;

import java.math.BigDecimal;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EncrptionService", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EncrptionService {


    /**
     * 
     * @param getBoxKeysInfoSTS6Result
     * @param errorCode
     * @param keyRegister
     * @param keyInfo
     * @param errorMsg
     */
    @WebMethod(operationName = "GetBoxKeysInfoSTS6", action = "http://tempuri.org/IEncryptionEngine/GetBoxKeysInfoSTS6")
    @RequestWrapper(localName = "GetBoxKeysInfoSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetBoxKeysInfoSTS6")
    @ResponseWrapper(localName = "GetBoxKeysInfoSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetBoxKeysInfoSTS6Response")
    public void getBoxKeysInfoSTS6(
        @WebParam(name = "keyRegister", targetNamespace = "http://tempuri.org/")
        String keyRegister,
        @WebParam(name = "GetBoxKeysInfoSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getBoxKeysInfoSTS6Result,
        @WebParam(name = "keyInfo", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> keyInfo,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param kekSlotStatus
     * @param errorCode
     * @param kekSlotId
     * @param getBoxKmcDetailInfoSTS6Result
     * @param vks
     * @param errorMsg
     */
    @WebMethod(operationName = "GetBoxKmcDetailInfoSTS6", action = "http://tempuri.org/IEncryptionEngine/GetBoxKmcDetailInfoSTS6")
    @RequestWrapper(localName = "GetBoxKmcDetailInfoSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetBoxKmcDetailInfoSTS6")
    @ResponseWrapper(localName = "GetBoxKmcDetailInfoSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetBoxKmcDetailInfoSTS6Response")
    public void getBoxKmcDetailInfoSTS6(
        @WebParam(name = "kekSlotId", targetNamespace = "http://tempuri.org/")
        String kekSlotId,
        @WebParam(name = "GetBoxKmcDetailInfoSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getBoxKmcDetailInfoSTS6Result,
        @WebParam(name = "vks", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> vks,
        @WebParam(name = "kekSlotStatus", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> kekSlotStatus,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tct
     * @param timeBaseLineNew
     * @param keyVersionR
     * @param errorCode
     * @param keyVersionNew
     * @param tarrifIndexCurrent
     * @param keyExpiredR
     * @param errorMsg
     * @param tarrifIndexNew
     * @param timeBaseLineR
     * @param keyChangeNums
     * @param supplyGroupCodeNew
     * @param ear
     * @param meterNo
     * @param timeBaseLineCurrent
     * @param tctR
     * @param supplyGroupCodeCurrent
     * @param ea
     * @param makeKeyTokenResult
     * @param keyVersionCurrent
     */
    @WebMethod(operationName = "MakeKeyTokenSTS6ForM", action = "http://tempuri.org/IEncryptionEngine/MakeKeyTokenSTS6ForM")
    @RequestWrapper(localName = "MakeKeyTokenSTS6ForM", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeKeyTokenSTS6ForM")
    @ResponseWrapper(localName = "MakeKeyTokenSTS6ForMResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeKeyTokenSTS6ForMResponse")
    public void makeKeyTokenSTS6ForM(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode_current", targetNamespace = "http://tempuri.org/")
        int supplyGroupCodeCurrent,
        @WebParam(name = "supplyGroupCode_new", targetNamespace = "http://tempuri.org/")
        int supplyGroupCodeNew,
        @WebParam(name = "tarrifIndex_current", targetNamespace = "http://tempuri.org/")
        int tarrifIndexCurrent,
        @WebParam(name = "tarrifIndex_new", targetNamespace = "http://tempuri.org/")
        int tarrifIndexNew,
        @WebParam(name = "keyVersion_current", targetNamespace = "http://tempuri.org/")
        int keyVersionCurrent,
        @WebParam(name = "keyVersion_new", targetNamespace = "http://tempuri.org/")
        int keyVersionNew,
        @WebParam(name = "timeBaseLine_current", targetNamespace = "http://tempuri.org/")
        String timeBaseLineCurrent,
        @WebParam(name = "timeBaseLine_new", targetNamespace = "http://tempuri.org/")
        String timeBaseLineNew,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        String tct,
        @WebParam(name = "EA", targetNamespace = "http://tempuri.org/")
        String ea,
        @WebParam(name = "keyChangeNums", targetNamespace = "http://tempuri.org/")
        String keyChangeNums,
        @WebParam(name = "MakeKeyTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeKeyTokenResult,
        @WebParam(name = "keyVersionR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> keyVersionR,
        @WebParam(name = "keyExpiredR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> keyExpiredR,
        @WebParam(name = "EAR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> ear,
        @WebParam(name = "tctR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> tctR,
        @WebParam(name = "timeBaseLineR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> timeBaseLineR,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param makeManagementTokenResult
     * @param tct
     * @param keyExpired
     * @param errorCode
     * @param managementFunction
     * @param control
     * @param supplyGroupCode
     * @param command
     * @param stsVersion
     * @param keyVersion
     * @param meterNo
     * @param timeBaseLine
     * @param keyRegister
     */
    @WebMethod(operationName = "MakeManagementTokenSTS6", action = "http://tempuri.org/IEncryptionEngine/MakeManagementTokenSTS6")
    @RequestWrapper(localName = "MakeManagementTokenSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeManagementTokenSTS6")
    @ResponseWrapper(localName = "MakeManagementTokenSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeManagementTokenSTS6Response")
    public void makeManagementTokenSTS6(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "managementFunction", targetNamespace = "http://tempuri.org/")
        int managementFunction,
        @WebParam(name = "command", targetNamespace = "http://tempuri.org/")
        int command,
        @WebParam(name = "Control", targetNamespace = "http://tempuri.org/")
        BigDecimal control,
        @WebParam(name = "timeBaseLine", targetNamespace = "http://tempuri.org/")
        String timeBaseLine,
        @WebParam(name = "stsVersion", targetNamespace = "http://tempuri.org/")
        int stsVersion,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        int tct,
        @WebParam(name = "keyRegister", targetNamespace = "http://tempuri.org/")
        String keyRegister,
        @WebParam(name = "MakeManagementTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeManagementTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param tarrifIndex
     * @param tokenClass
     * @param tokenSubClass
     * @param tokenId
     * @param transferAmount
     * @param errorCode
     * @param supplyGroupCode
     * @param token
     * @param errorMsg
     * @param keyVersion
     * @param meterNo
     * @param timeBaseLine
     * @param ea
     * @param verifyEncryptedTokenResult
     */
    @WebMethod(operationName = "VerifyEncryptedTokenSTS6ForM", action = "http://tempuri.org/IEncryptionEngine/VerifyEncryptedTokenSTS6ForM")
    @RequestWrapper(localName = "VerifyEncryptedTokenSTS6ForM", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.VerifyEncryptedTokenSTS6ForM")
    @ResponseWrapper(localName = "VerifyEncryptedTokenSTS6ForMResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.VerifyEncryptedTokenSTS6ForMResponse")
    public void verifyEncryptedTokenSTS6ForM(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "timeBaseLine", targetNamespace = "http://tempuri.org/")
        String timeBaseLine,
        @WebParam(name = "token", targetNamespace = "http://tempuri.org/")
        String token,
        @WebParam(name = "EA", targetNamespace = "http://tempuri.org/")
        String ea,
        @WebParam(name = "VerifyEncryptedTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> verifyEncryptedTokenResult,
        @WebParam(name = "transferAmount", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<BigDecimal> transferAmount,
        @WebParam(name = "tokenClass", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Byte> tokenClass,
        @WebParam(name = "tokenSubClass", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Byte> tokenSubClass,
        @WebParam(name = "tokenId", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> tokenId,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempuri.org/IEncryptionEngine/vkLoadRequest")
    @WebResult(name = "VkLoadRequestResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "vkLoadRequest", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.VkLoadRequest")
    @ResponseWrapper(localName = "vkLoadRequestResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.VkLoadRequestResponse")
    public String vkLoadRequest(
        @WebParam(name = "arg0", targetNamespace = "http://tempuri.org/")
        String arg0);

    /**
     * 
     * @param getRtcAndWinsizeSTS6Result
     * @param errorCode
     * @param winSize
     * @param rtcTime
     * @param errorMsg
     */
    @WebMethod(operationName = "GetRtcAndWinsizeSTS6", action = "http://tempuri.org/IEncryptionEngine/GetRtcAndWinsizeSTS6")
    @RequestWrapper(localName = "GetRtcAndWinsizeSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetRtcAndWinsizeSTS6")
    @ResponseWrapper(localName = "GetRtcAndWinsizeSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetRtcAndWinsizeSTS6Response")
    public void getRtcAndWinsizeSTS6(
        @WebParam(name = "GetRtcAndWinsizeSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getRtcAndWinsizeSTS6Result,
        @WebParam(name = "rtcTime", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> rtcTime,
        @WebParam(name = "winSize", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> winSize,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param makeManagementTokenResult
     * @param tct
     * @param transferAmount
     * @param keyVersionR
     * @param errorCode
     * @param managementFunction
     * @param supplyGroupCode
     * @param keyExpiredR
     * @param command
     * @param errorMsg
     * @param timeBaseLineR
     * @param keyVersion
     * @param ear
     * @param meterNo
     * @param timeBaseLine
     * @param tctR
     * @param ea
     */
    @WebMethod(operationName = "MakeManagementTokenSTS6ForM", action = "http://tempuri.org/IEncryptionEngine/MakeManagementTokenSTS6ForM")
    @RequestWrapper(localName = "MakeManagementTokenSTS6ForM", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeManagementTokenSTS6ForM")
    @ResponseWrapper(localName = "MakeManagementTokenSTS6ForMResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeManagementTokenSTS6ForMResponse")
    public void makeManagementTokenSTS6ForM(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "managementFunction", targetNamespace = "http://tempuri.org/")
        int managementFunction,
        @WebParam(name = "transferAmount", targetNamespace = "http://tempuri.org/")
        BigDecimal transferAmount,
        @WebParam(name = "command", targetNamespace = "http://tempuri.org/")
        int command,
        @WebParam(name = "timeBaseLine", targetNamespace = "http://tempuri.org/")
        String timeBaseLine,
        @WebParam(name = "EA", targetNamespace = "http://tempuri.org/")
        String ea,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        String tct,
        @WebParam(name = "MakeManagementTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeManagementTokenResult,
        @WebParam(name = "keyVersionR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> keyVersionR,
        @WebParam(name = "keyExpiredR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> keyExpiredR,
        @WebParam(name = "EAR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> ear,
        @WebParam(name = "tctR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> tctR,
        @WebParam(name = "timeBaseLineR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> timeBaseLineR,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param creditFunction
     * @param tct
     * @param transferAmount
     * @param tokenTime
     * @param keyExpired
     * @param errorCode
     * @param makeTokenResult
     * @param supplyGroupCode
     * @param stsVersion
     * @param keyVersion
     * @param meterNo
     * @param timeBaseLine
     * @param keyRegister
     */
    @WebMethod(operationName = "MakeTokenSTS6WithTime", action = "http://tempuri.org/IEncryptionEngine/MakeTokenSTS6WithTime")
    @RequestWrapper(localName = "MakeTokenSTS6WithTime", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeTokenSTS6WithTime")
    @ResponseWrapper(localName = "MakeTokenSTS6WithTimeResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeTokenSTS6WithTimeResponse")
    public void makeTokenSTS6WithTime(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "transferAmount", targetNamespace = "http://tempuri.org/")
        BigDecimal transferAmount,
        @WebParam(name = "creditFunction", targetNamespace = "http://tempuri.org/")
        int creditFunction,
        @WebParam(name = "timeBaseLine", targetNamespace = "http://tempuri.org/")
        String timeBaseLine,
        @WebParam(name = "stsVersion", targetNamespace = "http://tempuri.org/")
        int stsVersion,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        int tct,
        @WebParam(name = "keyRegister", targetNamespace = "http://tempuri.org/")
        String keyRegister,
        @WebParam(name = "tokenTime", targetNamespace = "http://tempuri.org/")
        String tokenTime,
        @WebParam(name = "MakeTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param tarrifIndex
     * @param creditFunction
     * @param tct
     * @param transferAmount
     * @param keyExpired
     * @param errorCode
     * @param makeTokenResult
     * @param supplyGroupCode
     * @param stsVersion
     * @param keyVersion
     * @param meterNo
     * @param timeBaseLine
     * @param keyRegister
     */
    @WebMethod(operationName = "MakeTokenSTS6", action = "http://tempuri.org/IEncryptionEngine/MakeTokenSTS6")
    @RequestWrapper(localName = "MakeTokenSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeTokenSTS6")
    @ResponseWrapper(localName = "MakeTokenSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeTokenSTS6Response")
    public void makeTokenSTS6(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "transferAmount", targetNamespace = "http://tempuri.org/")
        BigDecimal transferAmount,
        @WebParam(name = "creditFunction", targetNamespace = "http://tempuri.org/")
        int creditFunction,
        @WebParam(name = "timeBaseLine", targetNamespace = "http://tempuri.org/")
        String timeBaseLine,
        @WebParam(name = "stsVersion", targetNamespace = "http://tempuri.org/")
        int stsVersion,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        int tct,
        @WebParam(name = "keyRegister", targetNamespace = "http://tempuri.org/")
        String keyRegister,
        @WebParam(name = "MakeTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param tarrifIndex
     * @param keyVersion
     * @param creditFunction
     * @param meterNo
     * @param transferAmount
     * @param keyExpired
     * @param errorCode
     * @param makeTokenResult
     * @param supplyGroupCode
     */
    @WebMethod(operationName = "MakeToken", action = "http://tempuri.org/IEncryptionEngine/MakeToken")
    @RequestWrapper(localName = "MakeToken", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeToken")
    @ResponseWrapper(localName = "MakeTokenResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeTokenResponse")
    public void makeToken(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "transferAmount", targetNamespace = "http://tempuri.org/")
        BigDecimal transferAmount,
        @WebParam(name = "creditFunction", targetNamespace = "http://tempuri.org/")
        int creditFunction,
        @WebParam(name = "MakeTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param errorCode
     * @param ea
     * @param queryDITKSTS6Result
     * @param keyCheckValue
     * @param errorMsg
     */
    @WebMethod(action = "http://tempuri.org/IEncryptionEngine/queryDITKSTS6")
    @RequestWrapper(localName = "queryDITKSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.QueryDITKSTS6")
    @ResponseWrapper(localName = "queryDITKSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.QueryDITKSTS6Response")
    public void queryDITKSTS6(
        @WebParam(name = "EA", targetNamespace = "http://tempuri.org/")
        String ea,
        @WebParam(name = "queryDITKSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> queryDITKSTS6Result,
        @WebParam(name = "keyCheckValue", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> keyCheckValue,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param numComps
     * @param generateDITKSTS6Result
     * @param errorCode
     * @param ea
     * @param keyCheckValue
     * @param errorMsg
     */
    @WebMethod(action = "http://tempuri.org/IEncryptionEngine/generateDITKSTS6")
    @RequestWrapper(localName = "generateDITKSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GenerateDITKSTS6")
    @ResponseWrapper(localName = "generateDITKSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GenerateDITKSTS6Response")
    public void generateDITKSTS6(
        @WebParam(name = "EA", targetNamespace = "http://tempuri.org/")
        String ea,
        @WebParam(name = "NumComps", targetNamespace = "http://tempuri.org/")
        int numComps,
        @WebParam(name = "generateDITKSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> generateDITKSTS6Result,
        @WebParam(name = "keyCheckValue", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> keyCheckValue,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param keyVersion
     * @param manufactoryKeyTokenResult
     * @param meterNo
     * @param keyExpired
     * @param errorCode
     * @param supplyGroupCode
     */
    @WebMethod(operationName = "ManufactoryKeyToken", action = "http://tempuri.org/IEncryptionEngine/ManufactoryKeyToken")
    @RequestWrapper(localName = "ManufactoryKeyToken", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.ManufactoryKeyToken")
    @ResponseWrapper(localName = "ManufactoryKeyTokenResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.ManufactoryKeyTokenResponse")
    public void manufactoryKeyToken(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "ManufactoryKeyTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> manufactoryKeyTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param timeStamp
     * @param getLogInfoSTS6Result
     * @param errorCode
     * @param position
     * @param eventType
     * @param message
     * @param errorMsg
     */
    @WebMethod(operationName = "GetLogInfoSTS6", action = "http://tempuri.org/IEncryptionEngine/GetLogInfoSTS6")
    @RequestWrapper(localName = "GetLogInfoSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetLogInfoSTS6")
    @ResponseWrapper(localName = "GetLogInfoSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetLogInfoSTS6Response")
    public void getLogInfoSTS6(
        @WebParam(name = "position", targetNamespace = "http://tempuri.org/")
        int position,
        @WebParam(name = "GetLogInfoSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getLogInfoSTS6Result,
        @WebParam(name = "timeStamp", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> timeStamp,
        @WebParam(name = "eventType", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> eventType,
        @WebParam(name = "message", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempuri.org/IEncryptionEngine/resetDevice")
    @WebResult(name = "ResetDeviceResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "resetDevice", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.ResetDevice")
    @ResponseWrapper(localName = "resetDeviceResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.ResetDeviceResponse")
    public String resetDevice();

    /**
     * 
     * @param numComps
     * @param errorCode
     * @param ea
     * @param keyCheckValueR
     * @param setDITKSTS6Result
     * @param keyCheckValue
     * @param errorMsg
     */
    @WebMethod(action = "http://tempuri.org/IEncryptionEngine/setDITKSTS6")
    @RequestWrapper(localName = "setDITKSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.SetDITKSTS6")
    @ResponseWrapper(localName = "setDITKSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.SetDITKSTS6Response")
    public void setDITKSTS6(
        @WebParam(name = "EA", targetNamespace = "http://tempuri.org/")
        String ea,
        @WebParam(name = "NumComps", targetNamespace = "http://tempuri.org/")
        int numComps,
        @WebParam(name = "KeyCheckValue", targetNamespace = "http://tempuri.org/")
        String keyCheckValue,
        @WebParam(name = "setDITKSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> setDITKSTS6Result,
        @WebParam(name = "keyCheckValueR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> keyCheckValueR,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param fhjg
     * @param vkInfo
     * @param newZt
     * @param kmcLoadVKResult
     * @param errorCode
     * @param kmcId
     * @param cxml
     * @param oldZt
     * @param errorMsg
     */
    @WebMethod(operationName = "KmcLoadVK", action = "http://tempuri.org/IEncryptionEngine/KmcLoadVK")
    @RequestWrapper(localName = "KmcLoadVK", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.KmcLoadVK")
    @ResponseWrapper(localName = "KmcLoadVKResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.KmcLoadVKResponse")
    public void kmcLoadVK(
        @WebParam(name = "vkInfo", targetNamespace = "http://tempuri.org/")
        String vkInfo,
        @WebParam(name = "kmcId", targetNamespace = "http://tempuri.org/")
        String kmcId,
        @WebParam(name = "KmcLoadVKResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> kmcLoadVKResult,
        @WebParam(name = "fhjg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> fhjg,
        @WebParam(name = "cxml", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> cxml,
        @WebParam(name = "oldZt", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> oldZt,
        @WebParam(name = "newZt", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> newZt,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param makeDefaultKeyTokenResult
     * @param keyVersion
     * @param meterNo
     * @param keyExpired
     * @param errorCode
     * @param supplyGroupCode
     */
    @WebMethod(operationName = "MakeDefaultKeyToken", action = "http://tempuri.org/IEncryptionEngine/MakeDefaultKeyToken")
    @RequestWrapper(localName = "MakeDefaultKeyToken", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeDefaultKeyToken")
    @ResponseWrapper(localName = "MakeDefaultKeyTokenResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeDefaultKeyTokenResponse")
    public void makeDefaultKeyToken(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "MakeDefaultKeyTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeDefaultKeyTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param tarrifIndex
     * @param tokenClass
     * @param tct
     * @param tokenSubClass
     * @param tokenId
     * @param transferAmount
     * @param keyExpired
     * @param errorCode
     * @param supplyGroupCode
     * @param token
     * @param stsVersion
     * @param keyVersion
     * @param meterNo
     * @param keyRegister
     * @param verifyEncryptedTokenResult
     */
    @WebMethod(operationName = "VerifyEncryptedTokenSTS6", action = "http://tempuri.org/IEncryptionEngine/VerifyEncryptedTokenSTS6")
    @RequestWrapper(localName = "VerifyEncryptedTokenSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.VerifyEncryptedTokenSTS6")
    @ResponseWrapper(localName = "VerifyEncryptedTokenSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.VerifyEncryptedTokenSTS6Response")
    public void verifyEncryptedTokenSTS6(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "keyRegister", targetNamespace = "http://tempuri.org/")
        String keyRegister,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "token", targetNamespace = "http://tempuri.org/")
        String token,
        @WebParam(name = "stsVersion", targetNamespace = "http://tempuri.org/")
        int stsVersion,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        int tct,
        @WebParam(name = "VerifyEncryptedTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> verifyEncryptedTokenResult,
        @WebParam(name = "transferAmount", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<BigDecimal> transferAmount,
        @WebParam(name = "tokenClass", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Byte> tokenClass,
        @WebParam(name = "tokenSubClass", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Byte> tokenSubClass,
        @WebParam(name = "tokenId", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> tokenId,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param key
     * @return
     *     returns int
     */
    @WebMethod(operationName = "LoadKey", action = "http://tempuri.org/IEncryptionEngine/LoadKey")
    @WebResult(name = "LoadKeyResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "LoadKey", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.LoadKey")
    @ResponseWrapper(localName = "LoadKeyResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.LoadKeyResponse")
    public int loadKey(
        @WebParam(name = "Key", targetNamespace = "http://tempuri.org/")
        String key);

    /**
     * 
     * @param context
     * @param boxAuthorizeResult
     * @param gqrq
     * @param errorCode
     * @param sdcssx
     * @param errorMsg
     */
    @WebMethod(operationName = "BoxAuthorize", action = "http://tempuri.org/IEncryptionEngine/BoxAuthorize")
    @RequestWrapper(localName = "BoxAuthorize", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.BoxAuthorize")
    @ResponseWrapper(localName = "BoxAuthorizeResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.BoxAuthorizeResponse")
    public void boxAuthorize(
        @WebParam(name = "context", targetNamespace = "http://tempuri.org/")
        String context,
        @WebParam(name = "BoxAuthorizeResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> boxAuthorizeResult,
        @WebParam(name = "sdcssx", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> sdcssx,
        @WebParam(name = "gqrq", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> gqrq,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param kmcs
     * @param errorCode
     * @param getBoxKmcInfoSTS6Result
     * @param errorMsg
     */
    @WebMethod(operationName = "GetBoxKmcInfoSTS6", action = "http://tempuri.org/IEncryptionEngine/GetBoxKmcInfoSTS6")
    @RequestWrapper(localName = "GetBoxKmcInfoSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetBoxKmcInfoSTS6")
    @ResponseWrapper(localName = "GetBoxKmcInfoSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetBoxKmcInfoSTS6Response")
    public void getBoxKmcInfoSTS6(
        @WebParam(name = "GetBoxKmcInfoSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getBoxKmcInfoSTS6Result,
        @WebParam(name = "kmcs", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> kmcs,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param errorCode
     * @param deleteKeySTS6Result
     * @param keyRegister
     * @param errorMsg
     */
    @WebMethod(operationName = "DeleteKeySTS6", action = "http://tempuri.org/IEncryptionEngine/DeleteKeySTS6")
    @RequestWrapper(localName = "DeleteKeySTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.DeleteKeySTS6")
    @ResponseWrapper(localName = "DeleteKeySTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.DeleteKeySTS6Response")
    public void deleteKeySTS6(
        @WebParam(name = "keyRegister", targetNamespace = "http://tempuri.org/")
        String keyRegister,
        @WebParam(name = "DeleteKeySTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> deleteKeySTS6Result,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param errorCode
     * @param sysdcs
     * @param getVendingTimesResult
     * @param errorMsg
     */
    @WebMethod(operationName = "GetVendingTimes", action = "http://tempuri.org/IEncryptionEngine/GetVendingTimes")
    @RequestWrapper(localName = "GetVendingTimes", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetVendingTimes")
    @ResponseWrapper(localName = "GetVendingTimesResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetVendingTimesResponse")
    public void getVendingTimes(
        @WebParam(name = "GetVendingTimesResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getVendingTimesResult,
        @WebParam(name = "sysdcs", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> sysdcs,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param makeManagementTokenResult
     * @param tct
     * @param tokenTime
     * @param keyExpired
     * @param errorCode
     * @param managementFunction
     * @param control
     * @param supplyGroupCode
     * @param command
     * @param stsVersion
     * @param keyVersion
     * @param meterNo
     * @param timeBaseLine
     * @param keyRegister
     */
    @WebMethod(operationName = "MakeManagementTokenSTS6WithTime", action = "http://tempuri.org/IEncryptionEngine/MakeManagementTokenSTS6WithTime")
    @RequestWrapper(localName = "MakeManagementTokenSTS6WithTime", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeManagementTokenSTS6WithTime")
    @ResponseWrapper(localName = "MakeManagementTokenSTS6WithTimeResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeManagementTokenSTS6WithTimeResponse")
    public void makeManagementTokenSTS6WithTime(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "managementFunction", targetNamespace = "http://tempuri.org/")
        int managementFunction,
        @WebParam(name = "command", targetNamespace = "http://tempuri.org/")
        int command,
        @WebParam(name = "Control", targetNamespace = "http://tempuri.org/")
        BigDecimal control,
        @WebParam(name = "timeBaseLine", targetNamespace = "http://tempuri.org/")
        String timeBaseLine,
        @WebParam(name = "stsVersion", targetNamespace = "http://tempuri.org/")
        int stsVersion,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        int tct,
        @WebParam(name = "keyRegister", targetNamespace = "http://tempuri.org/")
        String keyRegister,
        @WebParam(name = "tokenTime", targetNamespace = "http://tempuri.org/")
        String tokenTime,
        @WebParam(name = "MakeManagementTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeManagementTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param fhjg
     * @param gyxx
     * @param newZt
     * @param errorCode
     * @param kmcId
     * @param cxml
     * @param kmcApplyResult
     * @param errorMsg
     */
    @WebMethod(operationName = "KmcApply", action = "http://tempuri.org/IEncryptionEngine/KmcApply")
    @RequestWrapper(localName = "KmcApply", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.KmcApply")
    @ResponseWrapper(localName = "KmcApplyResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.KmcApplyResponse")
    public void kmcApply(
        @WebParam(name = "gyxx", targetNamespace = "http://tempuri.org/")
        String gyxx,
        @WebParam(name = "KmcApplyResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> kmcApplyResult,
        @WebParam(name = "fhjg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> fhjg,
        @WebParam(name = "kmcId", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> kmcId,
        @WebParam(name = "cxml", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> cxml,
        @WebParam(name = "newZt", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> newZt,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param delay
     * @param errorCode
     * @param echoData
     * @param boxCommunicationTestSTS6Result
     * @param testResult
     * @param errorMsg
     */
    @WebMethod(operationName = "BoxCommunicationTestSTS6", action = "http://tempuri.org/IEncryptionEngine/BoxCommunicationTestSTS6")
    @RequestWrapper(localName = "BoxCommunicationTestSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.BoxCommunicationTestSTS6")
    @ResponseWrapper(localName = "BoxCommunicationTestSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.BoxCommunicationTestSTS6Response")
    public void boxCommunicationTestSTS6(
        @WebParam(name = "delay", targetNamespace = "http://tempuri.org/")
        int delay,
        @WebParam(name = "echoData", targetNamespace = "http://tempuri.org/")
        String echoData,
        @WebParam(name = "BoxCommunicationTestSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> boxCommunicationTestSTS6Result,
        @WebParam(name = "testResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> testResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param keyRegisterNew
     * @param tct
     * @param tokenTime
     * @param errorCode
     * @param keyVersionNew
     * @param tarrifIndexCurrent
     * @param keyRegisterCurrent
     * @param keyExpiredNew
     * @param tarrifIndexNew
     * @param stsVersion
     * @param keyExpiredCurrent
     * @param supplyGroupCodeNew
     * @param meterNo
     * @param supplyGroupCodeCurrent
     * @param makeKeyTokenResult
     * @param keyVersionCurrent
     */
    @WebMethod(operationName = "MakeKeyTokenSTS6WithTime", action = "http://tempuri.org/IEncryptionEngine/MakeKeyTokenSTS6WithTime")
    @RequestWrapper(localName = "MakeKeyTokenSTS6WithTime", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeKeyTokenSTS6WithTime")
    @ResponseWrapper(localName = "MakeKeyTokenSTS6WithTimeResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeKeyTokenSTS6WithTimeResponse")
    public void makeKeyTokenSTS6WithTime(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode_current", targetNamespace = "http://tempuri.org/")
        int supplyGroupCodeCurrent,
        @WebParam(name = "supplyGroupCode_new", targetNamespace = "http://tempuri.org/")
        int supplyGroupCodeNew,
        @WebParam(name = "tarrifIndex_current", targetNamespace = "http://tempuri.org/")
        int tarrifIndexCurrent,
        @WebParam(name = "tarrifIndex_new", targetNamespace = "http://tempuri.org/")
        int tarrifIndexNew,
        @WebParam(name = "keyVersion_current", targetNamespace = "http://tempuri.org/")
        int keyVersionCurrent,
        @WebParam(name = "keyExpired_current", targetNamespace = "http://tempuri.org/")
        int keyExpiredCurrent,
        @WebParam(name = "keyVersion_new", targetNamespace = "http://tempuri.org/")
        int keyVersionNew,
        @WebParam(name = "keyExpired_new", targetNamespace = "http://tempuri.org/")
        int keyExpiredNew,
        @WebParam(name = "stsVersion", targetNamespace = "http://tempuri.org/")
        int stsVersion,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        int tct,
        @WebParam(name = "keyRegister_current", targetNamespace = "http://tempuri.org/")
        String keyRegisterCurrent,
        @WebParam(name = "keyRegister_new", targetNamespace = "http://tempuri.org/")
        String keyRegisterNew,
        @WebParam(name = "tokenTime", targetNamespace = "http://tempuri.org/")
        String tokenTime,
        @WebParam(name = "MakeKeyTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeKeyTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param fhjg
     * @param kmcLoadKRResult
     * @param newZt
     * @param krContext
     * @param errorCode
     * @param kmcId
     * @param cxml
     * @param oldZt
     * @param errorMsg
     */
    @WebMethod(operationName = "KmcLoadKR", action = "http://tempuri.org/IEncryptionEngine/KmcLoadKR")
    @RequestWrapper(localName = "KmcLoadKR", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.KmcLoadKR")
    @ResponseWrapper(localName = "KmcLoadKRResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.KmcLoadKRResponse")
    public void kmcLoadKR(
        @WebParam(name = "krContext", targetNamespace = "http://tempuri.org/")
        String krContext,
        @WebParam(name = "kmcId", targetNamespace = "http://tempuri.org/")
        String kmcId,
        @WebParam(name = "KmcLoadKRResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> kmcLoadKRResult,
        @WebParam(name = "fhjg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> fhjg,
        @WebParam(name = "cxml", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> cxml,
        @WebParam(name = "oldZt", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> oldZt,
        @WebParam(name = "newZt", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> newZt,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param manufactoryKeyTokenSTS6Result
     * @param keyVersionR
     * @param errorCode
     * @param supplyGroupCode
     * @param keyExpiredR
     * @param errorMsg
     * @param timeBaseLineR
     * @param keyVersion
     * @param ear
     * @param meterNo
     * @param timeBaseLine
     * @param ea
     * @param numTokens
     */
    @WebMethod(operationName = "ManufactoryKeyTokenSTS6", action = "http://tempuri.org/IEncryptionEngine/ManufactoryKeyTokenSTS6")
    @RequestWrapper(localName = "ManufactoryKeyTokenSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.ManufactoryKeyTokenSTS6")
    @ResponseWrapper(localName = "ManufactoryKeyTokenSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.ManufactoryKeyTokenSTS6Response")
    public void manufactoryKeyTokenSTS6(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "timeBaseLine", targetNamespace = "http://tempuri.org/")
        String timeBaseLine,
        @WebParam(name = "EA", targetNamespace = "http://tempuri.org/")
        String ea,
        @WebParam(name = "numTokens", targetNamespace = "http://tempuri.org/")
        String numTokens,
        @WebParam(name = "ManufactoryKeyTokenSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> manufactoryKeyTokenSTS6Result,
        @WebParam(name = "keyVersionR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> keyVersionR,
        @WebParam(name = "keyExpiredR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> keyExpiredR,
        @WebParam(name = "EAR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> ear,
        @WebParam(name = "timeBaseLineR", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> timeBaseLineR,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param tokenClass
     * @param keyVersion
     * @param tokenSubClass
     * @param tokenId
     * @param meterNo
     * @param transferAmount
     * @param keyExpired
     * @param errorCode
     * @param supplyGroupCode
     * @param verifyEncryptedTokenResult
     * @param token
     */
    @WebMethod(operationName = "VerifyEncryptedToken", action = "http://tempuri.org/IEncryptionEngine/VerifyEncryptedToken")
    @RequestWrapper(localName = "VerifyEncryptedToken", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.VerifyEncryptedToken")
    @ResponseWrapper(localName = "VerifyEncryptedTokenResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.VerifyEncryptedTokenResponse")
    public void verifyEncryptedToken(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "token", targetNamespace = "http://tempuri.org/")
        String token,
        @WebParam(name = "VerifyEncryptedTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> verifyEncryptedTokenResult,
        @WebParam(name = "transferAmount", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<BigDecimal> transferAmount,
        @WebParam(name = "tokenClass", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Byte> tokenClass,
        @WebParam(name = "tokenSubClass", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Byte> tokenSubClass,
        @WebParam(name = "tokenId", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> tokenId,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param deleteKmcSTS6Result
     * @param errorCode
     * @param kekSlotId
     * @param errorMsg
     */
    @WebMethod(operationName = "DeleteKmcSTS6", action = "http://tempuri.org/IEncryptionEngine/DeleteKmcSTS6")
    @RequestWrapper(localName = "DeleteKmcSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.DeleteKmcSTS6")
    @ResponseWrapper(localName = "DeleteKmcSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.DeleteKmcSTS6Response")
    public void deleteKmcSTS6(
        @WebParam(name = "kekSlotId", targetNamespace = "http://tempuri.org/")
        String kekSlotId,
        @WebParam(name = "DeleteKmcSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> deleteKmcSTS6Result,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param tarrifIndex
     * @param makeManagementTokenResult
     * @param keyVersion
     * @param meterNo
     * @param transferAmount
     * @param keyExpired
     * @param errorCode
     * @param managementFunction
     * @param supplyGroupCode
     */
    @WebMethod(operationName = "MakeManagementToken", action = "http://tempuri.org/IEncryptionEngine/MakeManagementToken")
    @RequestWrapper(localName = "MakeManagementToken", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeManagementToken")
    @ResponseWrapper(localName = "MakeManagementTokenResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeManagementTokenResponse")
    public void makeManagementToken(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode", targetNamespace = "http://tempuri.org/")
        int supplyGroupCode,
        @WebParam(name = "tarrifIndex", targetNamespace = "http://tempuri.org/")
        int tarrifIndex,
        @WebParam(name = "keyVersion", targetNamespace = "http://tempuri.org/")
        int keyVersion,
        @WebParam(name = "keyExpired", targetNamespace = "http://tempuri.org/")
        int keyExpired,
        @WebParam(name = "managementFunction", targetNamespace = "http://tempuri.org/")
        int managementFunction,
        @WebParam(name = "transferAmount", targetNamespace = "http://tempuri.org/")
        BigDecimal transferAmount,
        @WebParam(name = "MakeManagementTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeManagementTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @param keyRegisterNew
     * @param tct
     * @param errorCode
     * @param keyVersionNew
     * @param tarrifIndexCurrent
     * @param keyRegisterCurrent
     * @param keyExpiredNew
     * @param tarrifIndexNew
     * @param stsVersion
     * @param keyChangeNums
     * @param keyExpiredCurrent
     * @param supplyGroupCodeNew
     * @param meterNo
     * @param supplyGroupCodeCurrent
     * @param makeKeyTokenResult
     * @param keyVersionCurrent
     */
    @WebMethod(operationName = "MakeKeyTokenSTS6", action = "http://tempuri.org/IEncryptionEngine/MakeKeyTokenSTS6")
    @RequestWrapper(localName = "MakeKeyTokenSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeKeyTokenSTS6")
    @ResponseWrapper(localName = "MakeKeyTokenSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeKeyTokenSTS6Response")
    public void makeKeyTokenSTS6(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode_current", targetNamespace = "http://tempuri.org/")
        int supplyGroupCodeCurrent,
        @WebParam(name = "supplyGroupCode_new", targetNamespace = "http://tempuri.org/")
        int supplyGroupCodeNew,
        @WebParam(name = "tarrifIndex_current", targetNamespace = "http://tempuri.org/")
        int tarrifIndexCurrent,
        @WebParam(name = "tarrifIndex_new", targetNamespace = "http://tempuri.org/")
        int tarrifIndexNew,
        @WebParam(name = "keyVersion_current", targetNamespace = "http://tempuri.org/")
        int keyVersionCurrent,
        @WebParam(name = "keyExpired_current", targetNamespace = "http://tempuri.org/")
        int keyExpiredCurrent,
        @WebParam(name = "keyVersion_new", targetNamespace = "http://tempuri.org/")
        int keyVersionNew,
        @WebParam(name = "keyExpired_new", targetNamespace = "http://tempuri.org/")
        int keyExpiredNew,
        @WebParam(name = "stsVersion", targetNamespace = "http://tempuri.org/")
        int stsVersion,
        @WebParam(name = "tct", targetNamespace = "http://tempuri.org/")
        int tct,
        @WebParam(name = "keyRegister_current", targetNamespace = "http://tempuri.org/")
        String keyRegisterCurrent,
        @WebParam(name = "keyRegister_new", targetNamespace = "http://tempuri.org/")
        String keyRegisterNew,
        @WebParam(name = "keyChangeNums", targetNamespace = "http://tempuri.org/")
        String keyChangeNums,
        @WebParam(name = "MakeKeyTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeKeyTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "HelloWorld")
    @WebResult(targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "HelloWorld", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.HelloWorld")
    @ResponseWrapper(localName = "HelloWorldResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.HelloWorldResponse")
    public String helloWorld();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempuri.org/IEncryptionEngine/counterIncrement")
    @WebResult(name = "CounterIncrement", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "counterIncrement", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.CounterIncrement")
    @ResponseWrapper(localName = "counterIncrementResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.CounterIncrementResponse")
    public String counterIncrement(
        @WebParam(name = "arg0", targetNamespace = "http://tempuri.org/")
        String arg0);

    /**
     * 
     * @param hardwareId
     * @param firmwareId
     * @param errorCode
     * @param boxType
     * @param getBoxInfoSTS6Result
     * @param boxId
     * @param errorMsg
     */
    @WebMethod(operationName = "GetBoxInfoSTS6", action = "http://tempuri.org/IEncryptionEngine/GetBoxInfoSTS6")
    @RequestWrapper(localName = "GetBoxInfoSTS6", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetBoxInfoSTS6")
    @ResponseWrapper(localName = "GetBoxInfoSTS6Response", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetBoxInfoSTS6Response")
    public void getBoxInfoSTS6(
        @WebParam(name = "GetBoxInfoSTS6Result", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getBoxInfoSTS6Result,
        @WebParam(name = "boxId", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> boxId,
        @WebParam(name = "boxType", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> boxType,
        @WebParam(name = "hardwareId", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> hardwareId,
        @WebParam(name = "firmwareId", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> firmwareId,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @param fhjg
     * @param newZt
     * @param errorCode
     * @param kmcId
     * @param cxml
     * @param kmcLoadKFResult
     * @param oldZt
     * @param errorMsg
     */
    @WebMethod(operationName = "KmcLoadKF", action = "http://tempuri.org/IEncryptionEngine/KmcLoadKF")
    @RequestWrapper(localName = "KmcLoadKF", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.KmcLoadKF")
    @ResponseWrapper(localName = "KmcLoadKFResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.KmcLoadKFResponse")
    public void kmcLoadKF(
        @WebParam(name = "kmcId", targetNamespace = "http://tempuri.org/")
        String kmcId,
        @WebParam(name = "KmcLoadKFResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Boolean> kmcLoadKFResult,
        @WebParam(name = "fhjg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> fhjg,
        @WebParam(name = "cxml", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> cxml,
        @WebParam(name = "oldZt", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> oldZt,
        @WebParam(name = "newZt", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> newZt,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMsg", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> errorMsg);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetLoadKey", action = "http://tempuri.org/IEncryptionEngine/GetLoadKey")
    @WebResult(name = "GetLoadKeyResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetLoadKey", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetLoadKey")
    @ResponseWrapper(localName = "GetLoadKeyResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.GetLoadKeyResponse")
    public String getLoadKey();

    /**
     * 
     * @param keyExpiredNew
     * @param tarrifIndexNew
     * @param keyExpiredCurrent
     * @param supplyGroupCodeNew
     * @param meterNo
     * @param errorCode
     * @param keyVersionNew
     * @param supplyGroupCodeCurrent
     * @param makeKeyTokenResult
     * @param tarrifIndexCurrent
     * @param keyVersionCurrent
     */
    @WebMethod(operationName = "MakeKeyToken", action = "http://tempuri.org/IEncryptionEngine/MakeKeyToken")
    @RequestWrapper(localName = "MakeKeyToken", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeKeyToken")
    @ResponseWrapper(localName = "MakeKeyTokenResponse", targetNamespace = "http://tempuri.org/", className = "cn.multithreading.sts1test.encryptionws.MakeKeyTokenResponse")
    public void makeKeyToken(
        @WebParam(name = "meterNo", targetNamespace = "http://tempuri.org/")
        long meterNo,
        @WebParam(name = "supplyGroupCode_current", targetNamespace = "http://tempuri.org/")
        int supplyGroupCodeCurrent,
        @WebParam(name = "supplyGroupCode_new", targetNamespace = "http://tempuri.org/")
        int supplyGroupCodeNew,
        @WebParam(name = "tarrifIndex_current", targetNamespace = "http://tempuri.org/")
        int tarrifIndexCurrent,
        @WebParam(name = "tarrifIndex_new", targetNamespace = "http://tempuri.org/")
        int tarrifIndexNew,
        @WebParam(name = "keyVersion_current", targetNamespace = "http://tempuri.org/")
        int keyVersionCurrent,
        @WebParam(name = "keyExpired_current", targetNamespace = "http://tempuri.org/")
        int keyExpiredCurrent,
        @WebParam(name = "keyVersion_new", targetNamespace = "http://tempuri.org/")
        int keyVersionNew,
        @WebParam(name = "keyExpired_new", targetNamespace = "http://tempuri.org/")
        int keyExpiredNew,
        @WebParam(name = "MakeKeyTokenResult", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<List<Object>> makeKeyTokenResult,
        @WebParam(name = "errorCode", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<Integer> errorCode);

}
