<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.vincent.dao.master.MysqlDao">

    <select id="queryTmpCentlec" resultType="java.lang.Integer">
        select COUNT(1) from tmp_centlec where syn_date = #{sysDateString}
    </select>
    <select id="queryCurStaus" resultType="java.lang.String">
        select cur_dead_step from tmp_centlec where syn_date = #{sysDateString}
    </select>
    <insert id="insertTmpCentlec">
        insert into tmp_centlec(syn_date, cur_dead_step) values (#{sysDateString}, #{result})
    </insert>
    <update id="updateTmpCentlec">
        update tmp_centlec set cur_dead_step = #{result} where syn_date = #{sysDateString}
    </update>

    <delete id="deleteTmpData">
        delete from ${tmpTableName}
    </delete>

    <select id="prepareTmp1ToDate" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_0_1(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR})}
    </select>
    <select id="prepareTmpToTmp1" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_0_2(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>

    <insert id="insertTmpBj" parameterType="java.util.List">
        insert into tmp_bj (
            MT_MODEL_DESC,MT_COMM_ADDR,station_id,
            LINE_ID,SUBURB_ID,MUS_TI,
            MUS_SGCID,MUS_KEYVISION,MUS_KEYEXPIRY,
            LASTVENDDATE,LASTVENDFREEDATE,TARIFFNAME,
            CUSTOMER_ID,MeterStatus)
        values
        <foreach collection="list" item="item" index="index" separator =",">
        (
            #{item.MT_MODEL_DESC,jdbcType=VARCHAR},
            #{item.MT_COMM_ADDR,jdbcType=VARCHAR},
            #{item.station_id,jdbcType=VARCHAR},
            #{item.LINE_ID,jdbcType=VARCHAR},
            #{item.SUBURB_ID,jdbcType=VARCHAR},
            #{item.MUS_TI,jdbcType=VARCHAR},
            #{item.MUS_SGCID,jdbcType=VARCHAR},
            #{item.MUS_KEYVISION,jdbcType=VARCHAR},
            #{item.MUS_KEYEXPIRY,jdbcType=VARCHAR},
            #{item.LASTVENDDATE,jdbcType=VARCHAR},
            #{item.LASTVENDFREEDATE,jdbcType=VARCHAR},
            #{item.TARIFFNAME,jdbcType=VARCHAR},
            #{item.CUSTOMER_ID,jdbcType=VARCHAR},
            #{item.MeterStatus,jdbcType=VARCHAR}
        )
        </foreach>
    </insert>
    <insert id="insertTmpYh" parameterType="java.util.List">
        insert into tmp_yh (
        CUSTOMER_ID,customer_name,STATUS,
        OPENACCOUNT_DATE,ADDRESS,StandNumber,
        LINKMAN_PHONE,Station_id,US_TI,
        US_IDNUM,US_EMAIL,US_ZIP,
        US_SEX,BANKACCOUNT,BUSINESS_REGISTRATION_NUMBER,
        TARIFFNAME
        )
        values
        <foreach collection="list" item="item" index="index" separator =",">
        (
            #{item.CUSTOMER_ID,jdbcType=VARCHAR},
            #{item.customer_name,jdbcType=VARCHAR},
            #{item.STATUS,jdbcType=VARCHAR},
            #{item.OPENACCOUNT_DATE,jdbcType=VARCHAR},
            #{item.ADDRESS,jdbcType=VARCHAR},
            #{item.StandNumber,jdbcType=VARCHAR},
            #{item.LINKMAN_PHONE,jdbcType=VARCHAR},
            #{item.Station_id,jdbcType=VARCHAR},
            #{item.US_TI,jdbcType=VARCHAR},
            #{item.US_IDNUM,jdbcType=VARCHAR},
            #{item.US_EMAIL,jdbcType=VARCHAR},
            #{item.US_ZIP,jdbcType=VARCHAR},
            #{item.US_SEX,jdbcType=VARCHAR},
            #{item.BANKACCOUNT,jdbcType=VARCHAR},
            #{item.BUSINESS_REGISTRATION_NUMBER,jdbcType=VARCHAR},
            #{item.TARIFFNAME,jdbcType=VARCHAR}
        )
        </foreach>
    </insert>
    <insert id="insertTmpZw" parameterType="java.util.List">
        insert into tmp_zw (
        DEBTID,CUSTOMER_ID,DEBTNM,
        Debt_total,Balance,DTYPE,
        MINPAY,PMONEYPCT,AMOUNTPCT,
        CREATE_DATE,LASTDATE,DebtType,
        PAYCTS,AGREE_ID,DebtStatus
        )
        values
        <foreach collection="list" item="item" index="index" separator =",">
        (
            #{item.DEBTID,jdbcType=VARCHAR},
            #{item.CUSTOMER_ID,jdbcType=VARCHAR},
            #{item.DEBTNM,jdbcType=VARCHAR},
            #{item.Debt_total,jdbcType=VARCHAR},
            #{item.Balance,jdbcType=VARCHAR},
            #{item.DTYPE,jdbcType=VARCHAR},
            #{item.MINPAY,jdbcType=VARCHAR},
            #{item.PMONEYPCT,jdbcType=VARCHAR},
            #{item.AMOUNTPCT,jdbcType=VARCHAR},
            #{item.CREATE_DATE,jdbcType=TIMESTAMP},
            #{item.LASTDATE,jdbcType=VARCHAR},
            #{item.DebtType,jdbcType=VARCHAR},
            #{item.PAYCTS,jdbcType=VARCHAR},
            #{item.AGREE_ID,jdbcType=VARCHAR},
            #{item.DebtStatus,jdbcType=VARCHAR}
        )
        </foreach>
    </insert>

    <select id="queryMaxLastVendDate" resultType="java.lang.String">
        select DATE_FORMAT(max(lastvenddate), '%Y-%m-%d') from tmp_ljz
    </select>
    <insert id="insertTmpLjz" parameterType="java.util.List">
        insert into tmp_ljz (
        energy,MT_COMM_ADDR,LASTVENDDATE,ISFREE, ISUSED
        )
        values
        <foreach collection="list" item="item" index="index" separator =",">
        (
            #{item.energy,jdbcType=VARCHAR},
            #{item.MT_COMM_ADDR,jdbcType=VARCHAR},
            #{item.LASTVENDDATE,jdbcType=VARCHAR},
            #{item.ISFREE,jdbcType=VARCHAR},
            #{item.ISUSED,jdbcType=VARCHAR}
        )
        </foreach>
    </insert>

    <select id="queryTiChangedNum" resultType="java.lang.Integer">
        select count(1) from tmp_yh t,tmp_yh1 t1
        where t.customer_id = t1.customer_id
        and t.us_ti &lt;&gt; t1.us_ti
    </select>
    <select id="queryYhWithTariffChanged" resultType="cn.vincent.pojo.TmpYhChangedTariff">
        SELECT yh.*,yh1.tariffname AS tariffnameold
        FROM tmp_yh yh INNER JOIN tmp_yh1 yh1
        ON yh.customer_id = yh1.customer_id AND yh.tariffname &lt;&gt; yh1.tariffname
    </select>
    <select id="queryYhWithDwChanged" resultType="cn.vincent.pojo.TmpYhChangedDw">
        SELECT yh.*,yh1.station_id AS station_idold
        FROM tmp_yh yh INNER JOIN tmp_yh1 yh1
        ON yh.customer_id = yh1.customer_id AND yh1.station_id &lt;&gt; yh.station_id
    </select>
    <select id="executeScript1" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_1(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="queryDwNullNum" resultType="java.lang.Integer">
        select count(1) from a_consumer cons where cons.org_no is null
    </select>
    <select id="queryDwNullNumForMeter" resultType="java.lang.Integer">
          select count(1) from a_equip_meter meter where meter.org_no is null
    </select>

    <select id="queryBjWithVkChanged" resultType="cn.vincent.pojo.TmpBjChangedVk">
        SELECT  bj.*,
                bj1.mus_sgcid as mus_sgcidold,
                bj1.mus_keyvision as mus_keyvisionold,
                bj1.mus_keyexpiry as mus_keyexpiryold
		FROM tmp_bj bj INNER JOIN tmp_bj1 bj1 ON bj.mt_comm_addr=bj1.mt_comm_addr
		AND (bj1.mus_sgcid &lt;&gt; bj.mus_sgcid or bj1.mus_keyvision &lt;&gt; bj.mus_keyvision or bj1.mus_keyexpiry &lt;&gt; bj.mus_keyexpiry)
    </select>
    <select id="queryBjWithTiChanged" resultType="cn.vincent.pojo.TmpBjChangedTi">
        SELECT bj.*,bj1.mus_ti AS mus_tiold
		FROM tmp_bj bj INNER JOIN tmp_bj1 bj1 ON bj.mt_comm_addr=bj1.mt_comm_addr AND bj1.mus_ti &lt;&gt; bj.mus_ti
    </select>
    <select id="executeScript2" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_2(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>

    <select id="queryYhWithStatusChanged" resultType="cn.vincent.pojo.TmpYhChangedStatus">
        SELECT  yh.*,
                yh1.status AS statusold,
		        (SELECT MT_COMM_ADDR FROM tmp_bj bj WHERE bj.customer_id=yh.customer_id) MT_COMM_ADDR,
		        (SELECT MT_COMM_ADDR FROM tmp_bj bj1 WHERE bj1.customer_id=yh1.customer_id) MT_COMM_ADDRold
		FROM tmp_yh yh INNER JOIN tmp_yh1 yh1 ON yh.customer_id = yh1.customer_id AND yh1.status &lt;&gt; yh.status
    </select>
    <select id="queryNewYh" resultType="cn.vincent.pojo.TmpYh">
        SELECT a.*
        FROM tmp_yh a
	    WHERE NOT EXISTS(SELECT cons.CONS_NO FROM a_consumer cons WHERE CONCAT('CN_',a.customer_id) = cons.CONS_NO)
    </select>
    <select id="executeScript3_1" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_3_1(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>

    <select id="queryBjWithCustidChanged" resultType="cn.vincent.pojo.TmpBjChangedCustid">
        SELECT  bj.*,
                bj1.customer_id AS customer_idold
        FROM tmp_bj bj INNER JOIN tmp_bj1 bj1 ON bj1.mt_comm_addr = bj.mt_comm_addr
			AND bj1.customer_id &lt;&gt; bj.customer_id
    </select>
    <select id="executeScript3_2" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_3_2(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>

    <select id="queryBjDeleted" resultType="cn.vincent.pojo.TmpBj">
        SELECT bj1.*
        FROM tmp_bj1 bj1
	    WHERE NOT EXISTS(SELECT bj.mt_comm_addr FROM tmp_bj bj WHERE bj.mt_comm_addr = bj1.mt_comm_addr)
    </select>
    <select id="executeScript3_3" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_3_3(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript4" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_4(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript5_1" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_5_1(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript5_2" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_5_2(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript5_3" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_5_3(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript6" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_6(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript7" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_7(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>


    <update id="updateTmpWithNewIds">
        update tmp_ljz a
        INNER JOIN (select b.assetno as "meterNo", b.METER_ID as "meterId", d.CONS_ID as "consId"
                    from A_EQUIP_METER b
                    INNER JOIN a_mp_equipment_rela c on b.METER_ID = c.EQUIPMENTID and c.EQUIPMENTTYPE = '02'
                    INNER JOIN a_usagepoint d on c.MP_ID = d.MP_ID
                    ) tb on a.mt_comm_addr  = tb.meterNo
        SET a.meterId = tb.meterId, a.consId = tb.consId
    </update>
    <update id="updateTmpWithOldTmp">
        UPDATE tmp_ljz a
        INNER JOIN tmp_ljz1 aa
        ON a.mt_comm_addr = aa.mt_comm_addr AND a.isfree = aa.isfree AND TO_DAYS(a.lastvenddate) = TO_DAYS(aa.lastvenddate)
        SET a.energy_old = aa.energy, a.MT_COMM_ADDR_old = aa.mt_comm_addr,
        a.LASTVENDDATE_old = aa.LASTVENDDATE, a.ISFREE_old = aa.ISFREE, a.ISUSED_old = aa.ISUSED
    </update>
    <update id="updateEnergyByOldRows">
        UPDATE tmp_ljz SET energy = ROUND(energy - energy_old, 2), energy_old = 0 WHERE MT_COMM_ADDR_old IS NOT NULL AND ISUSED_old = 1
    </update>
    <!--插入阶梯-->
    <update id="updateUsedInsertStep">
        update tmp_ljz a set a.ISUSED = 1
        where a.ISFREE = 0 and a.ISUSED = 0 and
        NOT EXISTS (select 1 from vd_c_cumu_value b
        where b.cumu_obj = '03' and b.cumu_obj_id = a.meterId
        and a.LASTVENDDATE <![CDATA[ >= ]]>  b.start_time and a.LASTVENDDATE <![CDATA[ <= ]]> b.end_time)
    </update>
    <insert id="insertStepBatch">
        INSERT INTO VD_C_CUMU_VALUE
            (LESSEE_ID,	CUMU_ID, RULE_ID, CUMU_OBJ,	CUMU_OBJ_ID, CUMU_ITEM,	START_TIME,	END_TIME, CUMU_VALUE, VALUE_UNIT)
        SELECT
            2, AMI_GET_SEQUENCE('SEQ_VD_C_CUMU_VALUE'), NULL, '03', a.meterId, '0301',
            DATE_ADD(DATE_FORMAT(a.LASTVENDDATE, '%Y-%m-%d'), INTERVAL -DAY(a.LASTVENDDATE) + 1 DAY), LAST_DAY(a.LASTVENDDATE),
            a.energy, 'KWH'
        FROM tmp_ljz a
        where a.ISFREE = 0 and a.ISUSED = 1 and
        NOT EXISTS (select 1 from vd_c_cumu_value b
        where b.cumu_obj = '03' and b.cumu_obj_id = a.meterId
        and a.LASTVENDDATE <![CDATA[ >= ]]>  b.start_time and a.LASTVENDDATE <![CDATA[ <= ]]> b.end_time)
    </insert>
    <!--更新阶梯-->
    <update id="updateUsedUpdateStep">
        UPDATE tmp_ljz ljz
        INNER JOIN vd_c_cumu_value cumu  ON cumu.cumu_obj = '03' AND ljz.meterId = cumu.cumu_obj_id AND ljz.isfree = 0 AND ljz.isused = 0
            AND ljz.LASTVENDDATE <![CDATA[ >= ]]>  cumu.start_time AND ljz.LASTVENDDATE <![CDATA[ <= ]]> cumu.end_time
        SET ljz.isused = 1
    </update>
    <update id="updateStepBatch">
        UPDATE vd_c_cumu_value cumu
        INNER JOIN tmp_ljz ljz ON cumu.cumu_obj = '03' AND ljz.meterId = cumu.cumu_obj_id AND ljz.isfree = 0 AND ljz.isused = 1
            AND ljz.LASTVENDDATE <![CDATA[ >= ]]>  cumu.start_time AND ljz.LASTVENDDATE <![CDATA[ <= ]]> cumu.end_time
        SET cumu.cumu_value = ROUND(cumu.cumu_value + ljz.energy, 2)
    </update>
    <!--插入FBE-->
    <update id="updateUsedInsertFbe">
        UPDATE tmp_ljz a SET a.ISUSED = 1
        WHERE a.ISFREE = 1 AND a.ISUSED = 0 AND
        NOT EXISTS (SELECT 1 FROM vd_c_cumu_value b
        WHERE b.cumu_obj = '01' AND b.cumu_obj_id = a.consId
        AND a.LASTVENDDATE <![CDATA[ >= ]]>  b.start_time AND a.LASTVENDDATE <![CDATA[ <= ]]> b.end_time)
    </update>
    <insert id="insertFbeBatch">
        INSERT INTO vd_c_cumu_value
            (lessee_id, cumu_id, rule_id, cumu_obj, cumu_obj_id, cumu_item, start_time, end_time, cumu_value, value_unit)
        SELECT
            2, AMI_GET_SEQUENCE('SEQ_VD_C_CUMU_VALUE'), NULL, '01', a.consId, '0101',
            DATE_ADD(DATE_FORMAT(a.LASTVENDDATE, '%Y-%m-%d'), INTERVAL -DAY(a.LASTVENDDATE) + 1 DAY), LAST_DAY(a.LASTVENDDATE),
            a.energy, 'KWH'
        FROM tmp_ljz a
        WHERE a.ISFREE = 1 AND a.ISUSED = 1 AND
        NOT EXISTS (SELECT 1 FROM vd_c_cumu_value b
        WHERE b.cumu_obj = '01' AND b.cumu_obj_id = a.consId
        AND a.LASTVENDDATE <![CDATA[ >= ]]>  b.start_time AND a.LASTVENDDATE <![CDATA[ <= ]]> b.end_time)
    </insert>
    <!--更新FBE-->
    <update id="updateUsedUpdateFbe">
        UPDATE tmp_ljz ljz
        INNER JOIN vd_c_cumu_value cumu ON cumu.cumu_obj = '01' AND ljz.consId = cumu.cumu_obj_id AND ljz.isfree = 1 AND ljz.isused = 0
            AND ljz.LASTVENDDATE <![CDATA[ >= ]]>  cumu.start_time AND ljz.LASTVENDDATE <![CDATA[ <= ]]> cumu.end_time
        SET ljz.isused = 1
    </update>
    <update id="updateFbeBatch">
        UPDATE vd_c_cumu_value cumu
        INNER JOIN tmp_ljz ljz ON cumu.cumu_obj = '01' AND ljz.consId = cumu.cumu_obj_id AND ljz.isfree = 1 AND ljz.isused = 1
            AND ljz.LASTVENDDATE <![CDATA[ >= ]]>  cumu.start_time AND ljz.LASTVENDDATE <![CDATA[ <= ]]> cumu.end_time
        SET cumu.cumu_value = ljz.energy
    </update>





















    <!--    <select id="queryTmpLjzWithIdOld" resultType="cn.vincent.pojo.TmpLjzWithIdOld">-->
    <!--        select a.*, b.METER_ID "meterId", d.CONS_ID "consId",-->
    <!--			aa.energy "energy_old", aa.mt_comm_addr "MT_COMM_ADDR_old",-->
    <!--			aa.LASTVENDDATE "LASTVENDDATE_old", aa.ISFREE "ISFREE_old",-->
    <!--			aa.ISUSED "ISUSED_old"-->
    <!--        from tmp_ljz a-->
    <!--        INNER JOIN A_EQUIP_METER b on a.mt_comm_addr  = b.assetno-->
    <!--        INNER JOIN a_mp_equipment_rela c on b.METER_ID = c.EQUIPMENTID and c.EQUIPMENTTYPE = '02'-->
    <!--        INNER JOIN a_usagepoint d on c.MP_ID = d.MP_ID-->
    <!--        LEFT JOIN tmp_ljz1 aa on a.mt_comm_addr = aa.mt_comm_addr and a.isfree = aa.isfree and TO_DAYS(a.lastvenddate) = TO_DAYS(aa.lastvenddate)-->
    <!--        where a.ISUSED = 0-->
    <!--    </select>-->

<!--
    <select id="queryExistCumu" resultType="java.lang.Integer">
        select count(1) from vd_c_cumu_value
        where cumu_obj = #{cumuObj} and cumu_obj_id = #{cumuObjId}
        and #{cumuDate} <![CDATA[ >= ]]> start_time and #{cumuDate} <![CDATA[ <= ]]> end_time
    </select>
    <insert id="insertFbeVdCcumuValue">
        INSERT INTO vd_c_cumu_value
            (lessee_id, cumu_id, rule_id, cumu_obj, cumu_obj_id, cumu_item, start_time, end_time, cumu_value, value_unit)
        VALUES
            (2, AMI_GET_SEQUENCE('SEQ_VD_C_CUMU_VALUE'), NULL, '01', #{consId}, '0101',
            DATE_ADD(#{cumuDate}, INTERVAL -DAY(#{cumuDate}) + 1 DAY), LAST_DAY(#{cumuDate}),
            #{cumuValue}, 'KWH')
    </insert>
    <insert id="insertStepVdCcumuValue">
        INSERT INTO VD_C_CUMU_VALUE
            (LESSEE_ID,	CUMU_ID, RULE_ID, CUMU_OBJ,	CUMU_OBJ_ID, CUMU_ITEM,	START_TIME,	END_TIME, CUMU_VALUE, VALUE_UNIT)
        VALUES
            (2, AMI_GET_SEQUENCE('SEQ_VD_C_CUMU_VALUE'), NULL, '03', #{meterId}, '0301',
            DATE_ADD(#{cumuDate}, INTERVAL -DAY(#{cumuDate}) + 1 DAY), LAST_DAY(#{cumuDate}),
            #{cumuValue}, 'KWH')
    </insert>
    <update id="updateFbeVdCcumuValue">
        UPDATE vd_c_cumu_value SET cumu_value = #{cumuValue}
        WHERE cumu_obj = '01' AND cumu_item = '0101' AND cumu_obj_id = #{consId}
        and #{cumuDate} <![CDATA[ >= ]]> start_time and #{cumuDate} <![CDATA[ <= ]]> end_time
    </update>
    <update id="updateStepVdCcumuValue">
        UPDATE VD_C_CUMU_VALUE SET CUMU_VALUE = CUMU_VALUE + #{cumuValueOffset}
        WHERE CUMU_OBJ = '03' AND CUMU_ITEM = '0301' AND CUMU_OBJ_ID = #{meterId}
        and #{cumuDate} <![CDATA[ >= ]]> start_time and #{cumuDate} <![CDATA[ <= ]]> end_time
    </update>
-->
    <select id="queryVdPtokenAsLjz" resultType="cn.vincent.pojo.TmpLjz">
        select 	t.RECHARGE_AMOUNT as "energy",
				t.meter_no as "MT_COMM_ADDR",
				t.CREATE_TIME as "LASTVENDDATE",
				(case when t.TOKEN_TYPE = '0101' then 0 else 1 end) as "ISFREE",
				'0' as "ISUSED"
        from vd_p_token t
        where  t.TOKEN_TYPE in ('0101', '0103') and TO_DAYS(t.CREATE_TIME) = TO_DAYS(#{cumuDate})
    </select>

    <insert id="insertTmpSdjl" parameterType="java.util.List">
        insert into tmp_sdjl (`ORDERSID`, `MT_COMM_ADDR`, `OD_DATE`, `ISFREE`,
            `CUSTOMER_ID`, `SGC_OLD`, `TI_OLD`, `KEYVERSIONID_OLD`, `KEYEXPIRY_OLD`,
            `SGC`, `TI`, `KEYVERSIONID`, `KEYEXPIRY`, `OCD_TOKEN`, `KEYTOKEN1`, `KEYTOKEN2`,
            `OCD_ENERGY`, `OCD_MONEY`, `PAYTYPE`, `FP_VAL3`, `OCD_DEBT`, `DEBT_BLC`,
            `OCD_PAYMONEY`, `operator`, `TE_NAME`, `DELFLAG`, `canceler`,
            `cancelDate`, `cancelReason`, `BANKINGNO`)
        values
        <foreach collection="list" item="item" index="index" separator =",">
            (
                #{item.ORDERSID,jdbcType=VARCHAR},
                #{item.MT_COMM_ADDR,jdbcType=VARCHAR},
                #{item.OD_DATE,jdbcType=datetime},
                #{item.ISFREE,jdbcType=tinyint},
                #{item.CUSTOMER_ID,jdbcType=mediumint},
                #{item.SGC_OLD,jdbcType=VARCHAR},
                #{item.TI_OLD,jdbcType=tinyint},
                #{item.KEYVERSIONID_OLD,jdbcType=tinyint},
                #{item.KEYEXPIRY_OLD,jdbcType=tinyint},
                #{item.SGC,jdbcType=VARCHAR},
                #{item.TI,jdbcType=tinyint},
                #{item.KEYVERSIONID,jdbcType=tinyint},
                #{item.KEYEXPIRY,jdbcType=tinyint},
                #{item.OCD_TOKEN,jdbcType=VARCHAR},
                #{item.KEYTOKEN1,jdbcType=VARCHAR},
                #{item.KEYTOKEN2,jdbcType=VARCHAR},
                #{item.OCD_ENERGY,jdbcType=decimal},
                #{item.OCD_MONEY,jdbcType=decimal},
                #{item.PAYTYPE,jdbcType=tinyint},
                #{item.FP_VAL3,jdbcType=decimal},
                #{item.OCD_DEBT,jdbcType=decimal},
                #{item.DEBT_BLC,jdbcType=decimal},
                #{item.OCD_PAYMONEY,jdbcType=decimal},
                #{item.operator,jdbcType=VARCHAR},
                #{item.TE_NAME,jdbcType=VARCHAR},
                #{item.DELFLAG,jdbcType=tinyint},
                #{item.canceler,jdbcType=VARCHAR},
                #{item.cancelDate,jdbcType=datetime},
                #{item.cancelReason,jdbcType=enum},
                #{item.BANKINGNO,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <insert id="insertAconsumerSingle">
        INSERT INTO a_consumer
            (cons_id, cons_no, cons_name, cons_sort_code, org_no, reg_no, elec_addr, trade_code, elec_type_code, contract_cap, build_date, cancel_date,
            STATUS, jfh, zjfbz, single_limit, free_charge, free_tax, premises_no, arrears, account_balance, mdc_id, id_no, erf_stand)
        SELECT
            AMI_GET_SEQUENCE('S_AMI_FILE'),
            CONCAT('CN_',a.customer_id), a.customer_name,
            (CASE
                WHEN a.tariffname LIKE '%(BUS)' THEN '02' -- 工商业用户
                ELSE '04' -- 低压居民
            END),
            c.NO,
            a.BUSINESS_REGISTRATION_NUMBER, -- 商业注册号（新增）
            a.address, NULL,
            IF(a.tariffname IN ('MANGAUNG-TG1(FBE)','MANTSOPA-TG2(FBE)', 'NALEDI-TG3(FBE)','MOHOKARE-TG4(FBE)', 'KOPANONG-TG5(FBE)'), '201', NULL), -- 201-乡村居民生活用电  代表可以享受免费额度50kwh
            NULL, a.openaccount_date, NULL,
            (CASE
                WHEN a.status = 0 THEN '03' -- 已销户
                WHEN a.status = 1 AND (SELECT COUNT(MT_COMM_ADDR) FROM tmp_bj bj WHERE bj.customer_id=a.customer_id)>0 THEN '02' -- 已投运
                WHEN a.status IN (1, 2, 5, 6, 8) AND (SELECT COUNT(MT_COMM_ADDR) FROM tmp_bj bj WHERE bj.customer_id=a.customer_id)=0 THEN '01' -- 新开户
                WHEN a.status IN (2, 5, 6, 8) AND (SELECT COUNT(MT_COMM_ADDR) FROM tmp_bj bj WHERE bj.customer_id=a.customer_id)>0 THEN '04' -- 已装表
                ELSE '03'
            END), -- 用户状态，依赖于于表计临时表
            NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2,
            a.US_IDNUM, -- 身份证号（新增）
            a.StandNumber -- 地址资产编号（新增）
        FROM tmp_yh a
        LEFT JOIN uap_organization c ON CONCAT('ORG_',a.station_id) = c.CODE
        WHERE a.CUSTOMER_ID = #{customerId}
    </insert>
    <insert id="insertAconsumerContactsSingle">
        INSERT INTO a_consumer_contacts
            (contactsid, contacts_name, contacts_type, phone_number, telephonenumber, email, cons_id, status, is_recieve_mail, gender)
        SELECT
            AMI_GET_SEQUENCE('S_AMI_FILE'), b.customer_name, '03',
            replace(b.LINKMAN_PHONE, ' ', ''), replace(b.LINKMAN_PHONE, ' ', ''), b.US_EMAIL,
            a.cons_id, 'Y', 'Y', IF(b.us_sex = 0,'01','02')
        FROM a_consumer a, tmp_yh b
        WHERE a.cons_no = CONCAT('CN_', b.CUSTOMER_ID)
        and b.CUSTOMER_ID = #{customerId}
    </insert>
    <insert id="insertAequipMeterSingle">
        INSERT INTO a_equip_meter
            (meter_id, org_no, devicetype_id, assetno, com_address, protocol, TYPE, meter_model, derection, rateself, installationdate, removaldate, longitude, latitude,
            STATUS, manufacturer, out_no, version_serial_no, meter_mode, meter_no, wiringmode, is_bluetooth, bluetooth_name, sim_no, m_position, tariff_type, access_type,
            m_meterbox, socket_server_model, is_solar, install_address, unit_id, ed_no, mgt_status)
        SELECT
            AMI_GET_SEQUENCE('S_AMI_FILE'),					-- 表计ID
            (SELECT NO FROM uap_organization WHERE CODE = CONCAT('ORG_',b.station_id)), -- 单位编号
            'meter', 										-- 设备类型标识
            b.mt_comm_addr, 								-- 资产编号
            NULL, 											-- 通讯地址
            '03',											-- DLMS规约
            '20', 											-- 离线表
            (SELECT pc.value
            FROM p_sys_code pc
            LEFT JOIN p_sys_code_language pcl ON pc.name = pcl.text_ID
            WHERE pc.code_type = 'bjxh' AND lang = 'en_US'
            AND pcl.text = b.mt_model_desc),			-- bjxh表计型号（PCODE）
            NULL,											-- 安装方向
            NULL,											-- 自身倍率
            CASE
            WHEN b.customer_id = '' THEN NULL																	-- 未绑用户，则认为‘装表日期’是‘null’
            WHEN b.customer_id != '' AND b.lastvenddate = '' THEN CURDATE()										-- 绑了用户，最后购电为null，则认为‘装表日期’是‘当前时间’
            WHEN b.customer_id != '' AND b.lastvenddate != '' AND DATE_FORMAT(b.lastvenddate, '%Y-%m') &lt; DATE_FORMAT(CURDATE(), '%Y-%m')
            THEN DATE_ADD(DATE_ADD(b.lastvenddate, INTERVAL -DAY(b.lastvenddate)+1 DAY), INTERVAL 1 MONTH)	-- 绑了用户，最后购电为当前月以前，则认为‘装表日期’是‘最后购电时间的下月1号’
            ELSE b.lastvenddate																					-- 绑了用户，最后购电为当前月，则认为‘装表日期’是‘最后购电时间’
            END, 											-- 装表日期
            NULL, 											-- 拆除日期
            NULL, 											-- 经度
            NULL, 											-- 纬度
            '01',                                   -- dbzt状态：离线表统一认为是01入库
            --	CASE
            --		WHEN b.customer_id = '' THEN '01'	-- 未绑用户，则认为‘状态’是01入库
            --		ELSE '02' 							-- 未绑用户，则认为‘状态’是02运行
            --		END, 								-- dbzt状态：01入库、02运行、03投运、04拆回
            (SELECT pc.value
            FROM p_sys_code pc
            LEFT JOIN p_sys_code_language pcl ON pc.name = pcl.text_ID
            WHERE cj.MANUFACTURER_DESC IS NOT NULL
            AND pc.code_type = 'dbcj' AND lang = 'en_US'
            AND pcl.text = cj.MANUFACTURER_DESC), 		-- dbcj电表厂家,PCODE 根据表型关联
            NULL, 											-- 外部标识
            NULL, 											-- 功能版本流水号
            '02', 											-- bjms表计模式：01正常模式、02预付费模式
            b.mt_comm_addr, 								-- 表号，同资产编号
            NULL, -- 接线方式
            NULL, -- 是否蓝牙表
            NULL, -- 蓝牙设备名称
            NULL, -- SIM卡号
            NULL, -- v_m_position
            NULL, -- v_tariff_type
            NULL, -- v_access_type
            NULL, -- v_m_meterbox
            NULL, -- v_socket_server_model
            NULL, -- v_is_solar
            NULL, -- v_install_address 安装地址
            NULL, -- v_unit_id
            NULL, -- v_ed_no
            (SELECT pc.value
            FROM p_sys_code pc
            LEFT JOIN p_sys_code_language pcl ON pc.name = pcl.text_ID
            WHERE pc.code_type = 'meter_mgt_status' AND lang = 'en_US'
            AND pcl.text = b.meterstatus) 					-- v_mgt_status 管理状态
        FROM tmp_bj b LEFT JOIN tmp_dbcj cj ON b.mt_model_desc = cj.MT_MODEL
        WHERE b.mt_comm_addr = #{meterNo}
    </insert>
    <insert id="insertAequipMeterVendingSingle">
        INSERT INTO a_equip_meter_vending
            (meter_id, vk_id, ti, keyno)
        SELECT
            a.meter_id, c.vk_id, b.mus_ti, NULL
        FROM
            A_EQUIP_METER a
            INNER JOIN tmp_bj b ON a.assetno = b.mt_comm_addr
            INNER JOIN vd_p_vk c ON b.mus_sgcid = c.sgc
                    AND b.mus_keyvision = c.krn
                    AND b.mus_keyexpiry = c.ken
                    AND c.ms = '02'
                    AND c.base_time=1993
        WHERE a.meter_mode='02' AND a.assetno = #{meterNo}
    </insert>
    <insert id="insertAusagePointSingle">
        INSERT INTO a_usagepoint
            (mp_id, mp_no, mp_name, location, org_no, type_code, usage_type_code, side_code, cons_id, line_id, tf_id, tf_line_id, mp_grade, is_load_c, is_calc_loss, main_standby, basevoltage, wiringmode, measuremode, ct, pt, STATUS, out_no, load_grade, subs_id, mdc_id, pkg_id)
        SELECT 	AMI_GET_SEQUENCE('S_AMI_FILE'),			-- 计量点标识
            CONCAT('mp_',a.cons_id,'_',b.mt_comm_addr), -- 计量点编号
            CONCAT('mp_',a.cons_id,'_',b.mt_comm_addr), -- 计量点名称
            a.elec_addr, -- 计量点地址
            a.org_no, -- 所属单位(取用户单位，默认表计单位同用户单位)
            '04', -- jldfl计量点分类：02线路关口03配变04用电客户05虚拟计量点
            NULL, -- zyyt主要用途：01结算02考核
            NULL, -- ljdssc计量点所属侧：01高压侧02中压侧03低压侧04变电站内05变电站外
            a.cons_id, -- 所属用户
            c.line_id, -- 所属线路标识
            d.tf_id, -- 所属变压器标识
            NULL, -- 所属变压器分线
            NULL, -- MP_GRADE计量点级别：10-1,20-2,30-3
            NULL, -- 是否安装负控
            NULL, -- 是否参与线损计算
            NULL, -- 主备标志
            'AC00101', -- 电压等级：交流10kV...
            NULL, -- 接线方式：单项、三相三线、三相四线
            NULL, -- 计量方式
            '1/1', -- CT
            '1/1', -- PT
            '02', -- 状态：01设立02在用03注销
            NULL, -- 外部标识
            NULL, -- 负荷等级
            subs.subs_id, -- subs_id 所属变电站标识
            2, -- mdc_id ？
            e.pkg_id -- pkg_id 费率方案标识
        FROM a_consumer a
        INNER JOIN tmp_bj b ON a.cons_no = CONCAT('CN_', b.customer_id)
        LEFT JOIN a_grid_line c ON CONCAT('SLT_',b.line_id) = c.line_no
        LEFT JOIN a_grid_transformer d ON CONCAT('SLT_',b.suburb_id) = d.tf_no
        LEFT JOIN a_grid_subs subs ON CONCAT('SLT_',b.station_id) = subs.subs_no
        LEFT JOIN VD_E_BILL_Package e ON b.tariffname = e.pkg_name
        WHERE b.MT_COMM_ADDR = #{meterNo}
    </insert>
    <insert id="insertMpRelSingle">
        INSERT INTO a_mp_equipment_rela
            (mp_id, equipmenttype, equipmentid, change_time, STATUS)
        SELECT a.mp_id, '02', b.meter_id, SYSDATE(), 'Y'
        FROM a_usagepoint a
        INNER JOIN a_equip_meter b ON SUBSTRING_INDEX(a.mp_no,'_',-1) = b.assetno AND  b.meter_mode='02'
        WHERE b.assetno = #{meterNo}
    </insert>
    <insert id="insertCatalogSingle">
    INSERT INTO `a_data_catalogue`
        (`DATA_ID`, `ORG_NO`, `CONS_ID`, `CONS_NO`, `CONS_NAME`, `CONS_SORT_TYPE`, `ED_ID`,
        `DEVICE_C`, `ED_ASSET_NO`, `LOGICAL_ADDRESS`, `METER_ID`, `METER_ASSET_NO`, `MP_ID`, `MP_NO`, `MP_NAME`,
        `TYPE_CODE`, `RATE`, `PT`, `CT`, `TF_ID`, `TF_NO`, `TF_NAME`, `LINE_ID`, `LINE_NO`, `LINE_NAME`,
        `EFFECT_TIME`, `DISCARD_TIME`, `STATUS`, `MDC_ID`)
    SELECT
        AMI_GET_SEQUENCE('S_AMI_FILE'), -- DATA_ID 数据主表id自增，序列用的是S_AMI_FILE
        u.org_no, -- ORG_NO
        c.cons_id, -- CONS_ID
        c.CONS_NO, -- CONS_NO
        c.CONS_NAME, -- CONS_NAME
        c.CONS_SORT_CODE, -- CONS_SORT_TYPE
        NULL, -- ED_ID 终端ID
        NULL, -- DEVICE_C
        NULL, -- ED_ASSET_NO 终端号
        NULL, -- LOGICAL_ADDRESS 终端逻辑地址对应A_EQUIP_ENDDEVICE的logical_address字段
        m.METER_ID, -- METER_ID
        m.ASSETNO, -- METER_ASSET_NO
        u.MP_ID, -- MP_ID
        u.MP_NO, -- MP_NO
        u.MP_NAME, -- MP_NAME
        u.TYPE_CODE, -- TYPE_CODE jldfl计量点分类：02线路关口03配变04用电客户05虚拟计量点
        '1.00000', -- RATE，默认是1
        u.PT, -- PT
        u.CT, -- CT
        tf.TF_ID, -- TF_ID
        tf.TF_NO, -- TF_NO
        tf.TF_NAME, -- TF_NAME
        line.LINE_ID, -- LINE_ID
        line.LINE_NO, -- LINE_NO
        line.LINE_NAME, -- LINE_NAME
        m.INSTALLATIONDATE, -- EFFECT_TIME 生效时间,就按电表的安装时间
        NULL, -- DISCARD_TIME 对应下面状态为0时的废弃时间
        '1', -- STATUS 状态：1是有效，0是无效，即废弃
        '2' -- MDC_ID
    FROM a_usagepoint u
    LEFT JOIN a_consumer c ON u.CONS_ID = c.CONS_ID
    LEFT JOIN a_mp_equipment_rela r ON u.MP_ID = r.MP_ID AND r.EQUIPMENTTYPE = '02' AND r.STATUS = 'Y'
    LEFT JOIN a_equip_meter m ON r.EQUIPMENTID = m.METER_ID
    LEFT JOIN a_grid_transformer tf ON u.TF_ID = tf.TF_ID
    LEFT JOIN a_grid_line line ON u.LINE_ID = line.LINE_ID
    WHERE m.assetno = #{meterNo}
    </insert>


    <select id="executeScript_zz_3_1" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_1(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_2" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_2(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_3" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_3(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_4" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_4(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_5" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_5(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_6" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_6(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_7" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_7(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_8" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_8(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_9" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_9(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_10" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_10(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_11" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_11(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_12" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_12(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="executeScript_zz_3_13" statementType="CALLABLE" parameterType="cn.vincent.pojo.ProcessParam" resultType="cn.vincent.pojo.ProcessParam">
        {CALL syn_zz_3_13(
            #{error_code,mode=OUT,jdbcType=INTEGER},
            #{error_msg,mode=OUT,jdbcType=VARCHAR}
        )}
    </select>
    <select id="queryCumuAmt" resultType="java.lang.Integer">
        SELECT COUNT(CUMU_ID) FROM vd_c_cumu_value WHERE CUMU_ITEM = #{cumuItem} AND START_TIME = #{startDate};
    </select>

</mapper>